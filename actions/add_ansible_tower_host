#!/usr/bin/env python
#
# Copyright (c) 2015, Arista Networks, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#  - Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#  - Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#  - Neither the name of Arista Networks nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ARISTA NETWORKS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
import requests
import json


def get_node_variables(node):

    return node.details()


def main(attributes):
    '''Use the Ansible Tower API to dynamically add a host to a specific
    inventory.

    Attributes:
        tower_url: URL to access Ansible Tower API
        username: username used for Ansible Tower login
        passwd: cleartext password used for Ansible Tower login
        inventory: the inventory id to add the host to
        hostname: (optional) store the host by the name given
        enabled: (optional, default True) enable the host in Tower

    Special_attributes:
        NODE: API object - see documentation for details

    Example:
        ::

          -
            action: add_ansible_tower_host
            attributes:
              tower_url: 'https://tower/api/v1/'
              username: ansible
              passwd: eosadmin
              inventory: 1
              group: 10
              hostname: allocate('hostnames')
              description: 'My awesome tor'
              contact_addr: allocate('mgmt_ip_pool')
              enabled: files/ssh/ansible_server_id_rsa.pub
            name: "Send API request to add to Ansible Tower Inventory"
    '''

    node = attributes.get('NODE')
    url = attributes.get('tower_url')
    username = attributes.get('username')
    passwd = attributes.get('passwd')
    inventory = attributes.get('inventory')
    group = attributes.get('group')
    enabled = attributes.get('enabled', True)
    description = attributes.get('description')
    hostname = attributes.get('hostname')
    contact_addr = attributes.get('contact_addr')

    if not hostname and not contact_addr:
        raise Exception('You must provide a hostname or contact_addr')

    auth_url = '%s/authtoken/' % url
    payload = dict(
        username=username,
        password=passwd
    )

    auth_response = requests.post(auth_url, data=payload)

    if auth_response.status_code == 200:
        auth_data = auth_response.json()
        token = auth_data['token']
    else:
        raise Exception('Unable to authenticate with user %s at %s '
                        'HTTP status code %s' %
                        (username, auth_url, auth_response.status_code))

    variables = dict(
        host_addr=contact_addr.split('/')[0],
        serialnumber=node.details()['serialnumber'],
        systemmac=node.details()['systemmac'],
        model=node.details()['model']
    )

    if group:
        hosts_url = '%s/groups/%s/hosts/' % (url, group)

        data = dict()
        data['name'] = hostname if hostname else contact_addr
        data['description'] = description
        data['inventory'] = inventory
        data['enabled'] = enabled
        data['variables'] = json.dumps(variables)

        headers = {'Authorization': 'token %s' % token}
        response = requests.post(hosts_url, headers=headers, data=data)
        print response.status_code
    else:
        hosts_url = '%s/hosts/' % url

        data = dict()
        data['name'] = hostname if hostname else contact_addr
        data['description'] = description
        data['inventory'] = inventory
        data['enabled'] = enabled
        data['variables'] = json.dumps(variables)

        headers = {'Authorization': 'token %s' % token}
        response = requests.post(hosts_url, headers=headers, data=data)
        print response.status_code
