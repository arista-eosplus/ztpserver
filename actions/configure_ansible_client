#!/usr/bin/env python
#
# Copyright (c) 2015, Arista Networks, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#  - Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#  - Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#  - Neither the name of Arista Networks nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ARISTA NETWORKS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# pylint: disable=C0209

import io
import os

from six import raise_from

TEMP_FILE = "/tmp/tmp-pub-key"
DEFAULT_ROOT = "/persist/local/"
DEFAULT_USER = "ansible"
DEFAULT_PASSWD = "ansible"
DEFAULT_GROUP = "eosadmin"


def main(attributes):
    """Create a user and configure ssh keys (optional) to help deploy an
    Ansible client automatically. The user that is created will be persistant
    across reboots. For more details on user creation, see NODE documentation
    for create_user().

    Attributes:
        user: username used by Ansible server to SSH into node
        passwd: cleartext password for user (default = ansible)
        group: group assigned to user above (default = eosadmin)
        root: directory assigned to user (default = /persist/local/)
        key: (optional) location of public ssh key to be written to
             authorized_keys


    Special_attributes:
        NODE: API object - see documentation for details

    Example:
        ::

          -
            action: configure_ansible_client
            attributes:
              user: ansible
              passwd: ansible
              group: eosadmin
              root: /persist/local
              key: files/ssh/ansible_server_id_rsa.pub
            name: "Configure Ansible SSH Keys"
    """

    node = attributes.get("NODE")
    url = attributes.get("key")
    user = attributes.get("user", DEFAULT_USER)
    passwd = attributes.get("passwd", DEFAULT_PASSWD)
    group = attributes.get("group", DEFAULT_GROUP)
    root = attributes.get("root", DEFAULT_ROOT)
    public_keys = None

    if url:
        try:
            node.retrieve_url(url, TEMP_FILE)
        except Exception as exc:
            raise_from(RuntimeError("Unable to retrieve file {}".format(url)), exc)

        try:
            with io.open(TEMP_FILE, encoding="utf8") as fd:
                public_keys = fd.read()
        except Exception as exc:
            raise_from(RuntimeError("Unable to read file {}".format(TEMP_FILE)), exc)

    node.create_user(user, group, passwd, root, public_keys)

    # Only remove this in case everything else succeeded
    # for debugging purposes
    os.remove(TEMP_FILE)
